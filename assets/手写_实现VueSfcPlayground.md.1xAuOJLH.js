import{_ as o,c as t,j as a,a as r,G as i,an as p,B as n,o as s}from"./chunks/framework.CkyLdKpM.js";const d="/FE-Knowledge2/vuesfcsimple.png",V=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"手写/实现VueSfcPlayground.md","filePath":"手写/实现VueSfcPlayground.md","lastUpdated":1730307720000}'),u={name:"手写/实现VueSfcPlayground.md"};function c(m,e,h,f,g,b){const l=n("vue-sfc-playground-simple");return s(),t("div",null,[e[0]||(e[0]=a("h2",{id:"简易版",tabindex:"-1"},[r("简易版 "),a("a",{class:"header-anchor",href:"#简易版","aria-label":'Permalink to "简易版"'},"​")],-1)),e[1]||(e[1]=a("p",null,"左侧单文件、右侧预览",-1)),e[2]||(e[2]=a("h3",{id:"效果",tabindex:"-1"},[r("效果 "),a("a",{class:"header-anchor",href:"#效果","aria-label":'Permalink to "效果"'},"​")],-1)),i(l),e[3]||(e[3]=p('<h3 id="原理" tabindex="-1">原理 <a class="header-anchor" href="#原理" aria-label="Permalink to &quot;原理&quot;">​</a></h3><p><img src="'+d+'" alt="Vue SFC Playground 简易版原理图"></p><p>简易版 Vue SFC Playground 的主要组成部分和工作原理如下：</p><ol><li><p>编辑器组件：使用 CodeMirror 实现，支持 Vue 单文件组件的语法高亮和编辑。</p></li><li><p>预览组件：使用 iframe 创建一个沙箱环境，用于渲染编辑器中的代码。</p></li><li><p>编译过程：利用 Vue 的编译器将 SFC 代码编译成可执行的 JavaScript。</p></li><li><p>状态管理：使用 Vue 的 provide/inject 机制在组件间共享代码状态。</p></li><li><p>实时更新：通过 postMessage 在编辑器和预览框之间传递编译后的代码，实现实时预览。</p></li></ol><p>这种设计既保证了代码编辑的流畅性，又确保了预览环境的安全性和隔离性。</p><h2 id="功能丰富版" tabindex="-1">功能丰富版 <a class="header-anchor" href="#功能丰富版" aria-label="Permalink to &quot;功能丰富版&quot;">​</a></h2><p>正是 repl <a href="https://github.com/vuejs/repl" target="_blank" rel="noreferrer">https://github.com/vuejs/repl</a></p><h3 id="效果-1" tabindex="-1">效果 <a class="header-anchor" href="#效果-1" aria-label="Permalink to &quot;效果&quot;">​</a></h3><p>todo</p><h3 id="原理-1" tabindex="-1">原理 <a class="header-anchor" href="#原理-1" aria-label="Permalink to &quot;原理&quot;">​</a></h3><ol><li><p>文件选择器： 支持多个文件。各文件编译结果存在一个map中，将主文件中import同级文件的语句转换成变量引入即可。</p></li><li><p>依赖选择器： 支持在不打包的情况下引入cdn模块，支持版本选择，依赖importMap实现</p></li><li><p>实时预览：使用postMessage在主窗口和预览iframe之间通信，实现代码编辑和预览的实时同步更新</p></li><li><p>编辑器：支持codeMirror或者monoeditor</p></li><li><p>代码共享：将当前的代码和配置序列化为字符串，可以使用压缩算法减小数据大小，将序列化后的数据编码到URL中，支持生成可分享的链接</p></li></ol>',11))])}const _=o(u,[["render",c]]);export{V as __pageData,_ as default};
