import{_ as e,c as n,an as p,j as s,o as t}from"./chunks/framework.CkyLdKpM.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"工程化/零碎知识点.md","filePath":"工程化/零碎知识点.md","lastUpdated":1732469132000}'),o={name:"工程化/零碎知识点.md"};function r(l,a,i,c,d,u){return t(),n("div",null,a[0]||(a[0]=[p(`<h2 id="cjs" tabindex="-1">cjs <a class="header-anchor" href="#cjs" aria-label="Permalink to &quot;cjs&quot;">​</a></h2><p>结果会怎么样</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>a.js</span></span>
<span class="line"><span></span></span>
<span class="line"><span>exports.a =1</span></span>
<span class="line"><span>require(&quot;b.js&quot;)</span></span>
<span class="line"><span>exports.b=2</span></span>
<span class="line"><span></span></span>
<span class="line"><span>b.js</span></span>
<span class="line"><span>console.log(require(&quot;a.js&quot;))</span></span></code></pre></div><h3 id="执行过程" tabindex="-1">执行过程 <a class="header-anchor" href="#执行过程" aria-label="Permalink to &quot;执行过程&quot;">​</a></h3><p>开始执行 a.js：</p><p>Node.js 初始化模块并创建 exports 对象。 执行 exports.a = 1，此时 a.js 的导出对象是：{ a: 1 }。 执行到 require(&quot;b.js&quot;)：</p><p>Node.js 开始加载 b.js，并运行其代码。 在 b.js 中执行 console.log(require(&quot;a.js&quot;))：</p><p>require(&quot;a.js&quot;) 再次请求 a.js 模块。 Node.js 检查模块缓存，发现 a.js 正在加载，返回当前的导出对象 { a: 1 }（部分加载的结果）。 console.log(require(&quot;a.js&quot;)) 打印：{ a: 1 }。 完成 b.js 的加载：</p><p>b.js 的代码执行完毕，返回到 a.js 继续执行。 继续执行 a.js：</p><p>执行 exports.b = 2，将 b 属性添加到导出对象。 此时 a.js 的最终导出对象是：{ a: 1, b: 2 }。</p><h3 id="最终结果" tabindex="-1">最终结果 <a class="header-anchor" href="#最终结果" aria-label="Permalink to &quot;最终结果&quot;">​</a></h3>`,11),s("p",{"a:":"",1:""},"输出：",-1),s("p",{"a:":"","1,":"","b:":"",2:""},'这是因为在 b.js 中 require("a.js") 返回的是 a.js 正在加载时的导出对象，此时 b 尚未导出。 a.js 的最终导出对象：',-1)]))}const q=e(o,[["render",r]]);export{b as __pageData,q as default};
